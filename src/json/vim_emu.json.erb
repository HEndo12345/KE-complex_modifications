{
  "title": "Vim Emulation",
  "rules": [
    {
      "description": "Vim Emulation",
      "manipulators":
      <%=
        manipulators = []

        # Change to normal mode
        manipulators += vim_emu(
          source_keys_list: ["escape", hash_from("open_bracket", ["control"])],
          dest_keys_list: [[], []],
          to_post_events: [["left_arrow"]] + vim_emu_mode(normal: 1),
          mode: ["visual", "visual_line"],
        )

        manipulators += vim_emu(
          source_keys_list: ["escape", hash_from("open_bracket", ["control"])],
          dest_keys_list: [[], []],
          to_post_events: hash_to([["tab"], ["tab"], ["spacebar"]]) + vim_emu_mode(normal: 1),
          mode: ["search", "search_input"]
        )

        manipulators += vim_emu(
          source_keys_list: ["escape", hash_from("open_bracket", ["control"])],
          dest_keys_list: [[], []],
          to_post_events: vim_emu_mode(normal: 1),
        )

        # Change to visual mode
        manipulators += vim_emu(
          source_keys_list: ["v"],
          dest_keys_list: [vim_emu_mode(visual: 1)],
          mode: "normal",
        )
        manipulators += vim_emu(
          source_keys_list: [hash_from("v", ["shift"])],
          dest_keys_list: [[["left_arrow", ["command"]], ["down_arrow", ["shift"]]]+vim_emu_mode(visual_line: 1)],
          mode: "normal",
        )

        # Change to insert (OS default) mode (normal mode)
        manipulators += vim_emu(
          source_keys_list: ["i", "a", "o"],
          dest_keys_list: [
            vim_emu_mode(),
            [["right_arrow"]] + vim_emu_mode(),
            [["right_arrow", ["command"]], ["return_or_enter"]] + vim_emu_mode(),
          ],
          mode: "normal",
        )
        manipulators += vim_emu(
          source_keys_list: ["i", "a", "o"],
          from_mandatory_modifiers: ["shift"],
          dest_keys_list: [
            [["left_arrow", ["command"]], ["right_arrow", ["option"]], ["left_arrow", ["option"]]] + vim_emu_mode(),
            [["right_arrow", ["command"]]] + vim_emu_mode(),
            [["up_arrow"], ["right_arrow", ["command"]]] + vim_emu_mode()
          ],
          mode: "normal",
        )

        # Move
        manipulators += vim_emu(
          source_keys_list: ["h", "l"],
          dest_keys_list: ["left_arrow", "right_arrow"],
          move: 11,
        )

        manipulators += vim_emu(
          source_keys_list: [
            "0",
            hash_from("4", ["shift"]), # $
            hash_from("6", ["shift"]), # ^
            hash_from("open_bracket", ["shift"]), # {
            hash_from("close_bracket", ["shift"]), # }
          ],
          dest_keys_list: [
            hash_to([["left_arrow", ["command"]]]),
            hash_to([["right_arrow", ["command"]]]),
            hash_to([["left_arrow", ["command"]], ["right_arrow", ["option"]], ["left_arrow", ["option"]]]),
            hash_to([["a", ["control"]]]),
            hash_to([["e", ["control"]]]),
          ],
          move: 10,
        )

        manipulators += vim_emu(
          source_keys_list: ["w", "e", "b"],
          dest_keys_list: [
            hash_to([["right_arrow", ["option"]], ["right_arrow", ["option"]], ["left_arrow", ["option"]]]),
            hash_to([["right_arrow", ["option"]]]),
            hash_to([["left_arrow", ["option"]]]),
          ],
          move: 11,
        )

        manipulators += vim_emu(
          source_keys_list: ["e"],
          dest_keys_list: [hash_to([["left_arrow", ["option"]], ["left_arrow", ["option"]], ["right_arrow", ["option"]]]) + vim_emu_mode(normal: 1)],
          mode: "g",
          move: 11
        )

        # Move up (normal, viaual modes)
        manipulators += vim_emu(
          source_keys_list: ["k", "hyphen", hash_from("u", ["control"])],
          dest_keys_list: [
            "up_arrow",
            hash_to([["up_arrow"], ["left_arrow", ["command"]], ["right_arrow", ["option"]], ["left_arrow", ["option"]]]),
            hash_to([["up_arrow", ["option"]]], 10),
          ],
          move: 21,
        )

        #manipulators += vim_emu(
        #  source_keys_list: [hash_from("b", ["control"])],
        #  dest_keys_list: [
        #    hash_to([["page_up", ["option"]]])
        #  ],
        #  move: 20,
        #)
        ## opt-shift-pageup doesn't select words...?
        #manipulators += vim_emu(
        #  source_keys_list: [hash_from("b", ["control"])],
        #  dest_keys_list: [
        #    hash_to([["page_up", ["shift"]]])
        #  ],
        #  mode: ["visual", "visual_line"],
        #)
        manipulators += vim_emu(
          source_keys_list: [hash_from("b", ["control"])],
          dest_keys_list: [
            hash_to([["page_up"]])
          ],
          move: 20,
        )

        manipulators += vim_emu(
          source_keys_list: ["g"],
          dest_keys_list: [vim_emu_mode(g: 1)],
          mode: "normal"
        )

        manipulators += vim_emu(
          source_keys_list: ["g"],
          dest_keys_list: [hash_to([["up_arrow", ["command"]]]) + vim_emu_mode(normal: 1)],
          mode: "g",
          move: 20
        )

        # Move down (normal, viaual modes)
        manipulators += vim_emu(
          source_keys_list: ["j", hash_from("equal_sign", ["shift"]), hash_from("d", ["control"])],
          dest_keys_list: [
            "down_arrow",
            hash_to([["down_arrow"], ["left_arrow", ["command"]], ["right_arrow", ["option"]], ["left_arrow", ["option"]]]),
            hash_to([["down_arrow", ["option"]]], 10),
          ],
          move: 21,
        )

        #manipulators += vim_emu(
        #  source_keys_list: [hash_from("f", ["control"])],
        #  dest_keys_list: [
        #    hash_to([["page_down", ["option"]]])
        #  ],
        #  move: 21,
        #)
        #manipulators += vim_emu(
        #  source_keys_list: [hash_from("f", ["control"])],
        #  dest_keys_list: [
        #    hash_to([["page_down", ["shift"]]])
        #  ],
        #  mode: "visual",
        #)
        manipulators += vim_emu(
          source_keys_list: [hash_from("f", ["control"])],
          dest_keys_list: [
            hash_to([["page_down"]])
          ],
          move: 21,
        )

        manipulators += vim_emu(
          source_keys_list: [hash_from("g", ["shift"])],
          dest_keys_list: [
            hash_to([["down_arrow", ["command"]]]),
          ],
          move: 20,
        )

        # ydc
        ydc_action = {
          "y"=>[["c", ["command"]], ["left_arrow"]] + vim_emu_mode(normal: 1, line: 0),
          "d"=>[["x", ["command"]]] + vim_emu_mode(normal: 1, line: 0),
          "c"=>[["x", ["command"]]] + vim_emu_mode(line: 0),
        }
        ydc_action_l = {
          "y"=>[["c", ["command"]], ["left_arrow"]] + vim_emu_mode(normal: 1, line: 1),
          "d"=>[["x", ["command"]], ["delete_forward"]] + vim_emu_mode(normal: 1, line: 1),
          "c"=>[["x", ["command"]]] + vim_emu_mode(line: 1),
        }
        ydc_double = [["a", ["control"]], ["right_arrow", ["command", "shift"]]]
        ydc_upcase = {
          "y"=>[["a", ["control"]], ["right_arrow", ["command", "shift"]]],
          "d"=>[["right_arrow", ["command", "shift"]]],
          "c"=>[["right_arrow", ["command", "shift"]]],
        }

        ["y", "d", "c"].each do |m|
          manipulators += vim_emu(
            source_keys_list: [m],
            dest_keys_list: [vim_emu_mode({m.to_sym=>1})],
            mode: "normal",
          )
          manipulators += vim_emu(
            source_keys_list: [m],
            dest_keys_list: [ydc_double + ydc_action_l[m]],
            mode: m,
          )
          manipulators += vim_emu(
            source_keys_list: [m],
            dest_keys_list: [ydc_action[m]],
            mode: "visual",
          )
          manipulators += vim_emu(
            source_keys_list: [m],
            dest_keys_list: [ydc_action_l[m]],
            mode: "visual_line",
          )
          manipulators += vim_emu(
            source_keys_list: [hash_from(m, ["shift"])],
            dest_keys_list: [ydc_upcase[m] + ydc_action[m]],
            mode: ["normal", "visual", "visual_line", m],
          )
        end

        # Paste
        manipulators += vim_emu(
          source_keys_list: ["p", hash_from("p", ["shift"])],
          dest_keys_list: [
            [["left_arrow", ["command"]], ["down_arrow"], ["v", ["command"]], ["return_or_enter"],
             ["up_arrow"], ["right_arrow", ["option"]], ["left_arrow", ["option"]]] + vim_emu_mode(normal: 1),
            [["left_arrow", ["command"]], ["v", ["command"]], ["return_or_enter"], ["up_arrow"],
             ["right_arrow", ["option"]], ["left_arrow", ["option"]]] + vim_emu_mode(normal: 1),
            [["v", ["command"]]] + vim_emu_mode(normal: 1),
          ],
          conditions: [{"type": "variable_if", "name": "vim_emu_line", "value": 1}],
          mode: "normal",
        )
        manipulators += vim_emu(
          source_keys_list: ["p", hash_from("p", ["shift"])],
          dest_keys_list: [
            [["right_arrow"], ["v", ["command"]], ["left_arrow"]] + vim_emu_mode(normal: 1),
            [["v", ["command"]], ["left_arrow"]] + vim_emu_mode(normal: 1),
          ],
          mode: "normal",
        )

        # x/X/s/S for Delete/Cut
        manipulators += vim_emu(
          source_keys_list: ["x", hash_from("x", ["shift"]), "s", hash_from("s", ["shift"])],
          dest_keys_list: [
            hash_to([["right_arrow", ["shift"]], ["x", ["command"]]]) + vim_emu_mode(normal:1, line: 0),
            hash_to([["left_arrow", ["shift"]], ["x", ["command"]]]) + vim_emu_mode(normal:1, line: 0),
            hash_to([["right_arrow", ["shift"]], ["x", ["command"]]]) + vim_emu_mode(line: 0),
            hash_to([["a", ["control"]], ["e", ["control", "shift"]], ["x", ["command"]]]) + vim_emu_mode(line: 1),
          ],
          mode: "normal",
        )
        manipulators += vim_emu(
          source_keys_list: ["x", hash_from("x", ["shift"]), "s", hash_from("s", ["shift"])],
          dest_keys_list: [
            [["x", ["command"]]] + vim_emu_mode(normal: 1, line: 0),
            hash_to([["a", ["control"]], ["e", ["control", "shift"]], ["x", ["command"]]]) + vim_emu_mode(normal: 1, line: 1),
            [["x", ["command"]]] + vim_emu_mode(line: 0),
            hash_to([["e", ["control", "shift"]], ["x", ["command"]]]) + vim_emu_mode(line: 1),
          ],
          mode: "visual",
        )

        # u/Ctrl-r (undo/redo), r/R (replace),
        # J (combine line), M (move to center), . (replace a following word with a clipboard)
        manipulators += vim_emu(
          source_keys_list: ["u", hash_from("r", ["control"]), "r", hash_from("r", ["shift"]),
                             hash_from("j", ["shift"]), hash_from("m", ["shift"])],
          dest_keys_list: [
            [["z", ["command"]]], [["z", ["command", "shift"]]], vim_emu_mode(r: 1), vim_emu_mode(r_cont: 1),
            hash_to([["right_arrow", ["command"]], ["spacebar"], ["delete_forward", ["shift"]], ["left_arrow"]]),
            hash_to([["page_down", ["option"]], ["page_up", ["option"]]]),
          ],
          mode: "normal",
        )

        # Replace
        manipulators += vim_emu(
          source_keys_list: all_letters,
          from_optional_modifiers: ["shift"],
          to_pre_events: [["delete_forward"]],
          dest_keys_list: all_letters_array,
          to_post_events: vim_emu_mode(normal: 1),
          mode: "r",
        )
        manipulators += vim_emu(
          source_keys_list: all_letters,
          from_optional_modifiers: ["shift"],
          to_pre_events: [["delete_forward"]],
          dest_keys_list: all_letters_array,
          mode: "r_cont",
        )

        # Search
        manipulators += vim_emu(
          source_keys_list: ["slash", "n", hash_from("n", ["shift"]), hash_from("8", ["shift"])],
          dest_keys_list: [
            hash_to([["f", ["command"]]]) + vim_emu_mode(search_input: 1),
            hash_to([["f", ["command"]], ["g", ["command"]], ["g", ["command"]]]) + vim_emu_mode(search: 1),
            hash_to([["f", ["command"]], ["g", ["command", "shift"]], ["g", ["command", "shift"]]]) + vim_emu_mode(search: 1),
            hash_to([["left_arrow", ["option"]], ["right_arrow", ["option", "shift"]], ["c", ["command"]], ["f", ["command"]], ["v", ["command"]], ["return_or_enter"]]) + vim_emu_mode(search: 1),
          ],
          mode: "normal",
        )
        manipulators += vim_emu(
          source_keys_list: ["n", hash_from("n", ["shift"])],
          dest_keys_list: [hash_to([["g", ["command"]]]), hash_to([["g", ["command", "shift"]]])],
          mode: "search",
        )
        manipulators += vim_emu(
          source_keys_list: ["return_or_enter"],
          dest_keys_list: [vim_emu_mode(search: 1)],
          mode: "search_input",
        )

        # Repeat n
        (1..9).each do |i|
          manipulators += vim_emu(
            source_keys_list: [i.to_s],
            dest_keys_list: [[{"set_variable": {"name": "vim_emu_n", "value": i}}]],
            mode: ["normal", "visual", "visual_line"]
          )
        end

        # Command mode
        manipulators += vim_emu(
          source_keys_list: ["semicolon"],
          from_optional_modifiers: ["shift"],
          dest_keys_list: [vim_emu_mode(command: 1)],
          mode: "normal",
        )

        manipulators += vim_emu(
          source_keys_list: ["w", "q", "h"],
          dest_keys_list: [
            vim_emu_mode(command_w: 1),
            [["w", ["command"]]] + vim_emu_mode(),
            [["slash", ["shift", "command"]]] + vim_emu_mode(),
          ],
          mode: "command",
        )

        manipulators += vim_emu(
          source_keys_list: ["return_or_enter", "spacebar", "q"],
          dest_keys_list: [
            [["s", ["command"]]] + vim_emu_mode(normal: 1),
            [["s", ["command", "shift"]]] + vim_emu_mode(),
            hash_to([["s", ["command"]], ["w", ["command"]]]) + vim_emu_mode(),
          ],
          mode: "command_w",
        )

        # Z
        manipulators += vim_emu(
          source_keys_list: [hash_from("z", ["shift"])],
          dest_keys_list: [vim_emu_mode(z: 1)],
          mode: "normal",
        )

        manipulators += vim_emu(
          source_keys_list: [hash_from("z", ["shift"]), hash_from("q", ["shift"])],
          dest_keys_list: [
            hash_to([["s", ["command"]], ["w", ["command"]]]) + vim_emu_mode(),
            [["w", ["command"]]] + vim_emu_mode(),
          ],
          mode: "z",
        )

        ## Keep Ctrl-Tab, Cmd-Tab (normal mode)
        #manipulators += vim_emu(
        #  source_keys_list: "tab",
        #  dest_keys_list: "tab",
        #  from_mandatory_modifiers: ["control"],
        #  to_modifiers: ["control"],
        #  mode: "visual",
        #)
        #manipulators += vim_emu(
        #  source_keys_list: "tab",
        #  dest_keys_list: "tab",
        #  from_mandatory_modifiers: ["command"],
        #  to_modifiers: ["command"],
        #  mode: "visual",
        #)

        ## Keep Ctrl-Tab, Cmd-Tab
        #manipulators += vim_emu(
        #  source_keys_list: "tab",
        #  dest_keys_list: "tab",
        #  from_mandatory_modifiers: ["control"],
        #  to_modifiers: ["control"],
        #  mode: ["normal", "visual"]
        #)
        #manipulators += vim_emu(
        #  source_keys_list: "tab",
        #  dest_keys_list: "tab",
        #  from_mandatory_modifiers: ["command"],
        #  to_modifiers: ["command"],
        #  mode: ["normal", "visual"]
        #)

        # Disable other keys
        # This works not as expected.
        # If this is appleid, modifier keys are ignored for these who have key mappings w/o modifiers,
        # and keys are disabled for these who have key mappings but with modifiers.
        #manipulators += vim_emu(
        #  source_keys_list: "any",
        #  dest_keys_list: "vk_none",
        #  from_optional_modifiers: ["any"],
        #  mode: ["normal", "visual"]
        #)
        JSON.generate(manipulators)
      %>
    }
  ]
}
